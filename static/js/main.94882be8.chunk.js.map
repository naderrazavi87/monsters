{"version":3,"sources":["logo.svg","Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","email","CardList","monsters","map","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","name","toLowerCase","includes","console","log","type","placeholder","onChange","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCEFA,EAAK,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAML,EAAMI,QAAQE,MAApB,WCDYC,EAAU,SAACP,GAExB,OAAO,qBAAKC,UAAU,YAAf,SAELD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACpB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UC6CZK,G,8DA/Cb,aAAe,IAAD,8BACZ,gBAEKC,MAAM,CACTH,SAAS,GACTI,YAAY,IALF,E,qDAWhB,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKC,SAAS,CAACV,SAASS,S,oBAQtC,WAAU,IAAD,OACP,EAAgCE,KAAKR,MAA9BH,EAAP,EAAOA,SAAUI,EAAjB,EAAiBA,YACXQ,EAAkBZ,EAASa,QAAO,SAAAjB,GAAO,OAC7CA,EAAQkB,KAAKC,cAAcC,SAASZ,EAAYW,kBAGpD,OADEE,QAAQC,IAAId,EAAYW,eAGxB,sBAAKtB,UAAU,MAAf,UACE,uBACE0B,KAAK,SACLC,YAAY,kBAEZC,SAAU,SAAAC,GAAC,OAAG,EAAKZ,SAAS,CAACN,YAAYkB,EAAEC,OAAOC,WAGpD,cAAC,EAAD,CAAUxB,SAAUY,W,GAvCRa,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.94882be8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport \"./card.style.css\";\nexport const Card=(props)=>(\n<div className=\"card-container\">\n\t<img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&Size=100*100`}/>\n\t<h2> {props.monster.email} </h2>\n\n</div>\n)","import React from \"react\";\nimport \"./card-list.style.css\" \nimport {Card} from \"../card/card.component.jsx\"\n\nexport const CardList =(props)=>{\n\t\nreturn <div className=\"card-list\">\n\n {props.monsters.map(monster=> (\n        <Card key={monster.id} monster={monster}/>\n        ))}\n\t</div>\n};\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport {CardList} from './Components/card-list/card-list.component'\nimport './App.css';\nimport {SearchBox} from './Components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor (){\n    super();\n\n    this.state={\n      monsters:[],\n      searchField:''\n    };\n    // this.handleChange= this.handleChange.bind(this);\n  }\n\n\ncomponentDidMount(){\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n  .then(response =>response.json())\n  .then(users =>this.setState({monsters:users}));\n}\n\n\n// handlechange(e){\n//   this.setState({searchField: e.target.value})\n//   }\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters= monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    console.log(searchField.toLowerCase());\n  return (\n\n    <div className=\"App\">\n      <input\n        type=\"search\"\n        placeholder=\"search monsters\" \n        \n        onChange={e=> this.setState({searchField:e.target.value})}\n        />\n\n      <CardList monsters={filteredMonsters}>\n      </CardList>\n    </div>\n    \n  );\n}\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}